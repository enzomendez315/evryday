type ExerciseSet @model @auth(rules: [{allow: public}]) {
  id: ID!
  reps: String
  time: String
  weight: String
  ExerciseType: [ExerciseType] @manyToMany(relationName: "ExerciseSetExerciseType")
  exerciseroutines: [ExerciseRoutine] @manyToMany(relationName: "ExerciseRoutineExerciseSet")
}

enum MealPeriod {
  breakfast
  lunch
  dinner
  custom
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  userId: ID!
  name: String!
  age: Int
  height: Float
  weight: Float
}

type NutritionLog @model @auth(rules: [{allow: public}]) {
  id: ID!
  userId: ID!
  date: AWSDate!
  Meals: [Meal] @hasMany
}

type Meal @model @auth(rules: [{allow: public}]) {
  id: ID!
  mealPeriod: MealPeriod!
  foodItems: [FoodItem] @manyToMany(relationName: "MealFoodItem")
}

type FoodItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  calories: Int
  protein: Float
  carbs: Float
  fat: Float
  serving: String
  meals: [Meal] @manyToMany(relationName: "MealFoodItem")
}

type ExerciseLog @model @auth(rules: [{allow: public}]) {
  id: ID!
  userId: ID!
  date: AWSDate!
  exerciseRoutine: ExerciseRoutine
  durationMinutes: Int
  caloriesBurned: Int
}

type ExerciseRoutine @model @auth(rules: [{allow: public}]) {
  id: ID!
  userId: ID!
  exercises: [ExerciseSet] @manyToMany(relationName: "ExerciseRoutineExerciseSet")
  name: String
}

type ExerciseType @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  target: String
  exercisesets: [ExerciseSet] @manyToMany(relationName: "ExerciseSetExerciseType")
}

type SleepLog @model @auth(rules: [{allow: public}]) {
  id: ID!
  userId: ID!
  date: AWSDate!
  hoursSlept: Float!
  sleepQuality: Int
  dreamJournal: String
}

type HealthScore @model @auth(rules: [{allow: public}]) {
  id: ID!
  userId: ID!
  date: String!
  score: Int!
}

type GoalLog @model @auth(rules: [{allow: public}]) {
  id: ID!
  userId: ID!
  weight: Float!
  hoursSlept: Float!
  dailyCalories: Int!
  dailyExercise: Int!
}
 